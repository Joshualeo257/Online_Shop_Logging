name: Change Discounts Monitor (Manual Loop)

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  loop-check:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # ‚è±Ô∏è Safety timeout so it doesn't run forever

    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Install loop utility
        run: sudo apt-get install -y moreutils

      - name: Start 30s loop for checking discount changes
        run: |
          for i in {1..20}; do  # üß™ change to control how many times it runs (e.g. 20 * 30s = 10 minutes)
            echo "üïí Cycle $i - Checking for discounts.json change..."
            
            git pull origin main

            CHANGED=$(git diff --name-only HEAD~1 HEAD | grep "discounts.json" || true)

            if [ ! -z "$CHANGED" ]; then
              echo "‚úÖ discounts.json changed."

              SEASON=$(grep '"current_season"' discounts.json | sed -E 's/.*: *"([^"]+)".*/\1/')
              echo "Current Season detected: $SEASON"

              case "$SEASON" in
                "Summer") MSG="‚òÄÔ∏è Summer Sale is here! Enjoy sizzling deals!" ;;
                "Winter") MSG="‚ùÑÔ∏è Winter Sale is live! Warm up with hot offers!" ;;
                "Spring") MSG="üå∏ Spring Sale! Fresh deals are blooming!" ;;
                "Autumn") MSG="üçÇ Autumn Sale is active! Fall into big savings!" ;;
                *) MSG="Season changed to: $SEASON. No predefined message found." ;;
              esac

              echo "üõí Discount prices may have been updated. Check out the new prices!"

              echo "Current Season detected: $SEASON" > output.txt
              echo "$MSG" >> output.txt
              echo "üõí Discount prices may have been updated. Check out the new prices!" >> output.txt

              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"

              git add output.txt
              if ! git diff --cached --quiet; then
                git commit -m "Looped update of output.txt [skip ci]"
                git push origin main
              fi
            else
              echo "‚ùå No discounts.json change in this cycle."
            fi

            echo "‚è≥ Sleeping for 30 seconds..."
            sleep 30
          done
